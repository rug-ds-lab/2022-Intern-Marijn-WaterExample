version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  producer:
    build: ./producer
    restart: always
    volumes:
      - ./data/:/app/data
      - ./config.ini:/app/config.ini
      -  ./wdn_input_files/:/app/wdn_input_files
    depends_on:
      - kafka
      - influxdb
    environment:
      PYTHONUNBUFFERED: 1
  pipeline0:
    build: ./pipeline0
    restart: always
    volumes:
      - ./config.ini:/app/config.ini
      - ./wdn_input_files/:/app/wdn_input_files
      - ./pipeline0/model/:/app/model
    depends_on:
      - kafka
      - producer
      - influxdb
      - grafana
    environment:
      PYTHONUNBUFFERED: 1
  pipeline1:
    build: ./pipeline1
    restart: always
    volumes:
      - ./config.ini:/app/config.ini
      - ./pipeline1/model/:/app/model
    depends_on:
      - kafka
      - producer
      - influxdb
      - grafana
    environment:
      PYTHONUNBUFFERED: 1
  pipeline2:
    build: ./pipeline2
    restart: always
    depends_on:
      - kafka
      - producer
      - influxdb
      - grafana
    environment:
      PYTHONUNBUFFERED: 1
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
  influxdb:
    image: docker.io/bitnami/influxdb:2
    ports:
      - "8086:8086"
      - "8088:8088"
    environment:
      - INFLUXDB_ADMIN_USER_PASSWORD=bitnami123
      - INFLUXDB_ADMIN_USER_TOKEN=token
    volumes:
      - influxdb_data:/bitnami/influxdb
  grafana:
    image: docker.io/bitnami/grafana:8
    ports:
      - '3000:3000'
    environment:
      - 'GF_SECURITY_ADMIN_PASSWORD=bitnami'
    volumes:
      - grafana_data:/opt/bitnami/grafana/data
      - ./grafana/conf/provisioning:/opt/bitnami/grafana/conf/provisioning
      - ./grafana/dashboards:/opt/bitnami/grafana/dashboards
volumes:
  influxdb_data:
    driver: local
  grafana_data:
    driver: local